CHI -- Cache Interface

CHI provides a unified caching API, designed to assist a developer in persisting data for
a specified period of time.

The CHI interface is implemented by driver classes that support fetching, storing and
clearing of data. Driver classes exist or will exist for the gamut of storage backends
available to Perl, such as memory, plain files, memory mapped files, memcached, and DBI.

CHI is intended as an evolution of DeWitt Clinton's Cache::Cache package, adhering to the
basic Cache API but adding new features and addressing limitations in the Cache::Cache
implementation.

INSTALLATION

To install this module, run the following commands:

	perl Makefile.PL
	make
	make test
	make install

SUPPORT AND DOCUMENTATION

After installing, you can find documentation for this module with the
perldoc command.

    perldoc CHI

Questions and feedback are welcome, and should be directed to the perl-cache mailing list:

    http://groups.google.com/group/perl-cache-discuss

The latest source code is available at:

    http://code.google.com/p/perl-cache/wiki/Source

You can also look for information at:

    RT, CPAN's request tracker
        http://rt.cpan.org/NoAuth/Bugs.html?Dist=CHI

    AnnoCPAN, Annotated CPAN documentation
        http://annocpan.org/dist/CHI

    CPAN Ratings
        http://cpanratings.perl.org/d/CHI

    Search CPAN
        http://search.cpan.org/dist/CHI

LICENSE

The development and release of this software was graciously supported by the Digital Media
group of the Hearst Corporation, a diversified media company based in New York City.
However, Hearst has no direct involvement with this open source release and bears no
responsibility for its support or maintenance.

CHI is provided "as is" and without any express or implied warranties, including, without
limitation, the implied warranties of merchantibility and fitness for a particular
purpose.

Copyright (C) 2007 Jonathan Swartz. This program is free software; you can redistribute it
and/or modify it under the same terms as Perl itself.
